/* Enclave.edl - Top EDL file. */

enclave {
    include "cuda_offset.h"
    include "cublas_v2.h"
    include "cublas_api.h"
    include "cublasLt.h"
    include "rt_cublas_header.h"
    include "cublasLt_desc.h"
    include "cublasLt_desc_local.h"
    trusted {
        public cublasStatus_t cublasLtCreate([out,transform_out=cublasLtToHandle] cublasLtHandle_t* lightHandle);
        public cublasStatus_t cublasLtDestroy([val,transform_in=handleToCublasLt]cublasLtHandle_t lightHandle);
        public cublasStatus_t cublasLtGetProperty(libraryPropertyType type, [out] int* value);
        public cublasStatus_t cublasLtMatmul([val,transform_in=handleToCublasLt]cublasLtHandle_t lightHandle, [val,transform_in=handleToCublasDesc]cublasLtMatmulDesc_t computeDesc, [in,sizefunc=cublasLtMatmulSize,sizefuncpars=alpha_computeDesc] const void* alpha, [devptr] const void* A, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Adesc, [devptr] const void* B, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Bdesc, [in,sizefunc=cublasLtMatmulSize,sizefuncpars=beta_computeDesc] const void* beta, [devptr] const void* C, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Cdesc, [devptr] void* D, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Ddesc, [in] const cublasLtMatmulAlgo_t* algo, [devptr] void* workspace, size_t workspaceSizeInBytes, [val,transform_in=handleToStream]cudaStream_t stream);
        public cublasStatus_t cublasLtMatrixTransform([val,transform_in=handleToCublasLt]cublasLtHandle_t lightHandle, [val,transform_in=handleToCublasTransformDesc]cublasLtMatrixTransformDesc_t transformDesc, [in,sizefunc=cublasLtMatrixTransformSize,sizefuncpars=alpha_transformDesc] const void* alpha, [devptr] const void* A, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Adesc, [in,sizefunc=cublasLtMatrixTransformSize,sizefuncpars=beta_transformDesc] const void* beta, [devptr] const void* B, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Bdesc, [devptr] void* C, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Cdesc, [val,transform_in=handleToStream]cudaStream_t stream);

        public cublasStatus_t cublasLtMatrixLayoutInit_internal([val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t matLayout, size_t size, cudaDataType type, uint64_t rows, uint64_t cols, int64_t ld);
        public cublasStatus_t cublasLtMatrixLayoutCreate([out,transform_out=cublasLayoutToHandle] cublasLtMatrixLayout_t* matLayout, cudaDataType type, uint64_t rows, uint64_t cols, int64_t ld);
        public cublasStatus_t cublasLtMatrixLayoutDestroy([val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t matLayout);
        public cublasStatus_t cublasLtMatrixLayoutSetAttribute([val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t matLayout, cublasLtMatrixLayoutAttribute_t attr, [in,size=sizeInBytes] const void* buf, size_t sizeInBytes);
        public cublasStatus_t cublasLtMatrixLayoutGetAttribute([val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t matLayout, cublasLtMatrixLayoutAttribute_t attr, [out,size=sizeInBytes] void* buf, size_t sizeInBytes, [out] size_t* sizeWritten);

        /* Helper functions for cublasLtMatmulDesc_t */
        [prefunc=cublasLtMatmulDescInitLogging] public cublasStatus_t cublasLtMatmulDescInit_internal([val,transform_in=handleToCublasDesc]cublasLtMatmulDesc_t matmulDesc, size_t size, cublasComputeType_t computeType, cudaDataType_t scaleType);
        [postfunc=cublasLtMatmulDescCreateLogging] public cublasStatus_t cublasLtMatmulDescCreate([out,transform_out=cublasDescToHandle]cublasLtMatmulDesc_t* matmulDesc, cublasComputeType_t computeType, cudaDataType_t scaleType);
        public cublasStatus_t cublasLtMatmulDescDestroy([val,transform_in=handleToCublasDesc]cublasLtMatmulDesc_t matmulDesc);
        [prefunc=cublasLtMatmulDescSetAttributeParams] public cublasStatus_t cublasLtMatmulDescSetAttribute([val,transform_in=handleToCublasDesc]cublasLtMatmulDesc_t matmulDesc, cublasLtMatmulDescAttributes_t attr, [in, size=sizeInBytes] const void* buf, size_t sizeInBytes);
        public cublasStatus_t cublasLtMatmulDescGetAttribute([val,transform_in=handleToCublasDesc]cublasLtMatmulDesc_t matmulDesc, cublasLtMatmulDescAttributes_t attr, [out, size=sizeInBytes] void* buf, size_t sizeInBytes, [out, size=sizeInBytes] size_t* sizeWritten);

        /* Helper functions for cublasLtMatrixTransformDesc_t */
        [prefunc=cublasLtMatrixTransformDescInitLogging] public cublasStatus_t cublasLtMatrixTransformDescInit_internal([val,transform_in=handleToCublasTransformDesc]cublasLtMatrixTransformDesc_t transformDesc, size_t size, cudaDataType scaleType);
        public cublasStatus_t cublasLtMatrixTransformDescCreate([out,transform_out=cublasTransformDescToHandle] cublasLtMatrixTransformDesc_t* transformDesc, cudaDataType scaleType);
        public cublasStatus_t cublasLtMatrixTransformDescDestroy([val,transform_in=handleToCublasTransformDesc]cublasLtMatrixTransformDesc_t transformDesc);
        public cublasStatus_t cublasLtMatrixTransformDescSetAttribute([val,transform_in=handleToCublasTransformDesc]cublasLtMatrixTransformDesc_t transformDesc, cublasLtMatrixTransformDescAttributes_t attr, [in,size=sizeInBytes] const void* buf, size_t sizeInBytes);
        public cublasStatus_t cublasLtMatrixTransformDescGetAttribute([val,transform_in=handleToCublasTransformDesc]cublasLtMatrixTransformDesc_t transformDesc, cublasLtMatrixTransformDescAttributes_t attr, [out,size=sizeInBytes] void* buf, size_t sizeInBytes, [out] size_t* sizeWritten);

        public cublasStatus_t cublasLtMatmulPreferenceInit_internal([val,transform_in=handleToCublasPref]cublasLtMatmulPreference_t pref, size_t size);
        public cublasStatus_t cublasLtMatmulPreferenceCreate([out,transform_out=cublasPrefToHandle] cublasLtMatmulPreference_t* pref);
        public cublasStatus_t cublasLtMatmulPreferenceDestroy([val,transform_in=handleToCublasPref]cublasLtMatmulPreference_t pref);
        public cublasStatus_t cublasLtMatmulPreferenceSetAttribute([val,transform_in=handleToCublasPref]cublasLtMatmulPreference_t pref, cublasLtMatmulPreferenceAttributes_t attr, [in, size=sizeInBytes] const void* buf, size_t sizeInBytes);
        public cublasStatus_t cublasLtMatmulPreferenceGetAttribute([val,transform_in=handleToCublasPref]cublasLtMatmulPreference_t pref, cublasLtMatmulPreferenceAttributes_t attr, [out, size=sizeInBytes] void* buf, size_t sizeInBytes, [out] size_t* sizeWritten);
        public cublasStatus_t cublasLtMatmulAlgoGetHeuristic([val,transform_in=handleToCublasLt]cublasLtHandle_t lightHandle, [val,transform_in=handleToCublasDesc]cublasLtMatmulDesc_t operationDesc, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Adesc, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Bdesc, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Cdesc, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Ddesc, [val,transform_in=handleToCublasPref]cublasLtMatmulPreference_t preference, int requestedAlgoCount, [out,count=requestedAlgoCount] cublasLtMatmulHeuristicResult_t *heuristicResultsArray, [out] int* returnAlgoCount);

        /* Lower level API to be able to implement own Heuristic and Find routines */
        public cublasStatus_t cublasLtMatmulAlgoGetIds([val,transform_in=handleToCublasLt]cublasLtHandle_t lightHandle, cublasComputeType_t computeType, cudaDataType_t scaleType, cudaDataType_t Atype, cudaDataType_t Btype, cudaDataType_t Ctype, cudaDataType_t Dtype, int requestedAlgoCount, [out, count=requestedAlgoCount] int *algoIdsArray, [out]int* returnAlgoCount);
        public cublasStatus_t cublasLtMatmulAlgoInit([val,transform_in=handleToCublasLt]cublasLtHandle_t lightHandle, cublasComputeType_t computeType, cudaDataType_t scaleType, cudaDataType_t Atype, cudaDataType_t Btype, cudaDataType_t Ctype, cudaDataType_t Dtype, int algoId, [out] cublasLtMatmulAlgo_t* algo);
        public cublasStatus_t cublasLtMatmulAlgoCheck([val,transform_in=handleToCublasLt]cublasLtHandle_t lightHandle, [val,transform_in=handleToCublasDesc]cublasLtMatmulDesc_t operationDesc, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Adesc, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Bdesc, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Cdesc, [val,transform_in=handleToCublasLayout]cublasLtMatrixLayout_t Ddesc, [in] const cublasLtMatmulAlgo_t* algo, [out] cublasLtMatmulHeuristicResult_t* result);

        public cublasStatus_t cublasLtMatmulAlgoCapGetAttribute([in] const cublasLtMatmulAlgo_t* algo, cublasLtMatmulAlgoCapAttributes_t attr, [out,size=sizeInBytes] void* buf, size_t sizeInBytes, [out] size_t* sizeWritten);
        public cublasStatus_t cublasLtMatmulAlgoConfigSetAttribute([out] cublasLtMatmulAlgo_t* algo, cublasLtMatmulAlgoConfigAttributes_t attr, [in,size=sizeInBytes] const void* buf, size_t sizeInBytes);
        public cublasStatus_t cublasLtMatmulAlgoConfigGetAttribute([in] const cublasLtMatmulAlgo_t* algo, cublasLtMatmulAlgoConfigAttributes_t attr, [out,size=sizeInBytes] void* buf, size_t sizeInBytes, [out] size_t* sizeWritten);

        public cublasStatus_t cublasLtLoggerSetCallback(cublasLtLoggerCallback_t callback);
        // public cublasStatus_t cublasLtLoggerSetFile(FILE* file);
        public cublasStatus_t cublasLtLoggerOpenFile([in,string] const char* logFile);
        public cublasStatus_t cublasLtLoggerSetLevel(int level);
        public cublasStatus_t cublasLtLoggerSetMask(int mask);
        public cublasStatus_t cublasLtLoggerForceDisable();
    };
};