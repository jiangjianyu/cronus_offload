/* ---------------- CUBLAS BLAS1 functions ---------------- */

enclave {
    include "cublas_size.h" 
    trusted {
        public cublasStatus_t cublasNrm2Ex([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const void* x, cudaDataType xType, int incx, [out,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=result_resultType]void* result, cudaDataType resultType, cudaDataType executionType);
        
        public cublasStatus_t cublasSnrm2_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const float* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]float* result);
        public cublasStatus_t cublasDnrm2_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const double* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]double* result);
        public cublasStatus_t cublasScnrm2_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuComplex* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]float* result);
        public cublasStatus_t cublasDznrm2_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuDoubleComplex* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]double* result);
        
        public cublasStatus_t cublasDotEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const void* x, cudaDataType xType, int incx, [devptr] const void* y, cudaDataType yType, int incy, [out,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=result_resultType]void* result, cudaDataType resultType, cudaDataType executionType);
        public cublasStatus_t cublasDotcEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const void* x, cudaDataType xType, int incx, [devptr] const void* y, cudaDataType yType, int incy, [out,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=result_resultType]void* result, cudaDataType resultType, cudaDataType executionType);

        public cublasStatus_t cublasSdot_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const float* x, int incx, [devptr] const float* y, int incy, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]float* result);
        public cublasStatus_t cublasDdot_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const double* x, int incx, [devptr] const double* y, int incy, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]double* result);
        public cublasStatus_t cublasCdotu_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuComplex* x, int incx, [devptr] const cuComplex* y, int incy, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]cuComplex* result);
        public cublasStatus_t cublasCdotc_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuComplex* x, int incx, [devptr] const cuComplex* y, int incy, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]cuComplex* result);
        public cublasStatus_t cublasZdotu_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuDoubleComplex* x, int incx, [devptr] const cuDoubleComplex* y, int incy, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]cuDoubleComplex* result);
        public cublasStatus_t cublasZdotc_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuDoubleComplex* x, int incx, [devptr] const cuDoubleComplex* y, int incy, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]cuDoubleComplex* result);
        
        public cublasStatus_t cublasScalEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=alpha_alphaType] const void* alpha, cudaDataType alphaType, [devptr] void* x, cudaDataType xType, int incx, cudaDataType executionType);
        
        public cublasStatus_t cublasSscal_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const float* alpha, [devptr] float* x, int incx);
        public cublasStatus_t cublasDscal_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const double* alpha, [devptr] double* x, int incx);
        public cublasStatus_t cublasCscal_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const cuComplex* alpha, [devptr] cuComplex* x, int incx);
        public cublasStatus_t cublasCsscal_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const float* alpha, [devptr] cuComplex* x, int incx);
        public cublasStatus_t cublasZscal_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const cuDoubleComplex* alpha, [devptr] cuDoubleComplex* x, int incx);
        public cublasStatus_t cublasZdscal_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const double* alpha, [devptr] cuDoubleComplex* x, int incx);

        public cublasStatus_t cublasAxpyEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=alpha_alphaType]const void* alpha, cudaDataType alphaType, [devptr] const void* x, cudaDataType xType, int incx, [devptr] void* y, cudaDataType yType, int incy, cudaDataType executiontype);
        
        public cublasStatus_t cublasSaxpy_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const float* alpha, [devptr] const float* x, int incx, [devptr] float* y, int incy);
        public cublasStatus_t cublasDaxpy_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const double* alpha, [devptr] const double* x, int incx, [devptr] double* y, int incy);
        public cublasStatus_t cublasCaxpy_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const cuComplex* alpha, [devptr] const cuComplex* x, int incx, [devptr] cuComplex* y, int incy);
        public cublasStatus_t cublasZaxpy_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha]const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* x, int incx, [devptr] cuDoubleComplex* y, int incy);
        
        public cublasStatus_t cublasCopyEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const void* x, cudaDataType xType, int incx, [devptr] void* y, cudaDataType yType, int incy);
        
        public cublasStatus_t cublasScopy_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const float* x, int incx, [devptr] float* y, int incy);
        public cublasStatus_t cublasDcopy_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const double* x, int incx, [devptr] double* y, int incy);
        public cublasStatus_t cublasCcopy_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuComplex* x, int incx, [devptr] cuComplex* y, int incy);
        public cublasStatus_t cublasZcopy_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuDoubleComplex* x, int incx, [devptr] cuDoubleComplex* y, int incy);
        public cublasStatus_t cublasSswap_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] float* x, int incx, [devptr] float* y, int incy);
        public cublasStatus_t cublasDswap_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] double* x, int incx, [devptr] double* y, int incy);
        public cublasStatus_t cublasCswap_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] cuComplex* x, int incx, [devptr] cuComplex* y, int incy);
        public cublasStatus_t cublasZswap_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] cuDoubleComplex* x, int incx, [devptr] cuDoubleComplex* y, int incy);
        public cublasStatus_t cublasSwapEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] void* x, cudaDataType xType, int incx, [devptr] void* y, cudaDataType yType, int incy);

        public cublasStatus_t cublasIsamax_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const float* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        public cublasStatus_t cublasIdamax_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const double* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        public cublasStatus_t cublasIcamax_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuComplex* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        public cublasStatus_t cublasIzamax_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuDoubleComplex* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        
        // public cublasStatus_t cublasIamaxEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const void* x, cudaDataType xType, int incx,[in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result] int* result);
        
        public cublasStatus_t cublasIsamin_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const float* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        public cublasStatus_t cublasIdamin_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const double* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        public cublasStatus_t cublasIcamin_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuComplex* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        public cublasStatus_t cublasIzamin_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuDoubleComplex* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        public cublasStatus_t cublasIaminEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const void* x, cudaDataType xType, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]int* result);
        
        // public cublasStatus_t cublasAsumEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const void* x, cudaDataType xType, int incx, [out,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=resultType_resultType]void* result, cudaDataType resultType, cudaDataType executiontype);
        
        public cublasStatus_t cublasSasum_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const float* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]float* result);
        public cublasStatus_t cublasDasum_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const double* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]double* result);
        public cublasStatus_t cublasScasum_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuComplex* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]float* result);
        public cublasStatus_t cublasDzasum_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] const cuDoubleComplex* x, int incx, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=result]double* result);

        public cublasStatus_t cublasSrot_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] float* x, int incx, [devptr] float* y, int incy, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] const float* c, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] const float* s);
        public cublasStatus_t cublasDrot_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] double* x, int incx, [devptr] double* y, int incy, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] const double* c, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] const double* s);
        public cublasStatus_t cublasCrot_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] cuComplex* x, int incx, [devptr] cuComplex* y, int incy, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] const float* c, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] const cuComplex* s);
        public cublasStatus_t cublasCsrot_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] cuComplex* x, int incx, [devptr] cuComplex* y, int incy, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] const float* c, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] const float* s);
        public cublasStatus_t cublasZrot_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] cuDoubleComplex* x, int incx, [devptr] cuDoubleComplex* y, int incy, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] const double* c, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] const cuDoubleComplex* s);
        public cublasStatus_t cublasZdrot_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] cuDoubleComplex* x, int incx, [devptr] cuDoubleComplex* y, int incy, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] const double* c, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] const double* s);
        
        public cublasStatus_t cublasRotEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] void* x, cudaDataType xType, int incx, [devptr] void* y, cudaDataType yType, int incy, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=c_csType]const void* c, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=s_csType]const void* s, cudaDataType csType, cudaDataType executiontype);
        
        public cublasStatus_t cublasSrotg_v2([val,transform_in=handleToCublas]cublasHandle_t handle, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=a] float* a, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=b] float* b, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] float* c, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] float* s);
        public cublasStatus_t cublasDrotg_v2([val,transform_in=handleToCublas]cublasHandle_t handle, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=a] double* a, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=b] double* b, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] double* c, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] double* s);
        public cublasStatus_t cublasCrotg_v2([val,transform_in=handleToCublas]cublasHandle_t handle, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=a] cuComplex* a, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=b] cuComplex* b, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] float* c, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] cuComplex* s);
        public cublasStatus_t cublasZrotg_v2([val,transform_in=handleToCublas]cublasHandle_t handle, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=a] cuDoubleComplex* a, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=b] cuDoubleComplex* b, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=c] double* c, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=s] cuDoubleComplex* s);
        
        // public cublasStatus_t cublasRotgEx([val,transform_in=handleToCublas]cublasHandle_t handle, [devptr] void* a, [devptr] void* b, cudaDataType abType, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=csType]void* c, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=csType]void* s, cudaDataType csType, cudaDataType executiontype);
        
        public cublasStatus_t cublasSrotm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] float* x, int incx, [devptr] float* y, int incy, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=param,count=5] const float* param);
        public cublasStatus_t cublasDrotm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] double* x, int incx, [devptr] double* y, int incy, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=param,count=5] const double* param);
        
        // public cublasStatus_t cublasRotmEx([val,transform_in=handleToCublas]cublasHandle_t handle, int n, [devptr] void* x, cudaDataType xType, int incx, [devptr] void* y, cudaDataType yType, int incy, [devptr] const void* param, cudaDataType paramType, cudaDataType executiontype);
        
        public cublasStatus_t cublasSrotmg_v2([val,transform_in=handleToCublas]cublasHandle_t handle, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=d1] float* d1, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=d2] float* d2, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=x1] float* x1, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=d1] const float* y1, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=param,count=5] float* param);  
        public cublasStatus_t cublasDrotmg_v2([val,transform_in=handleToCublas]cublasHandle_t handle, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=d1] double* d1, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=d2] double* d2, [in,out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=x1] double* x1, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=d1] const double* y1, [out,sizefunc=cublasHostOrDeviceSize,sizefuncpars=param,count=5] double* param);  
        
        // public cublasStatus_t cublasRotmgEx([val,transform_in=handleToCublas]cublasHandle_t handle, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=d1Type]void* d1, cudaDataType d1Type, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=d2Type]void* d2, cudaDataType d2Type, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=x1Type]void* x1, cudaDataType x1Type, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=y1Type]const void* y1, cudaDataType y1Type, [in,sizefunc=cublasHostOrDeviceTypeSize,sizefuncpars=paramType]void* param, cudaDataType paramType, cudaDataType executiontype);
    };
};