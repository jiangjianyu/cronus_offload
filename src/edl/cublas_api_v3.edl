/* ---------------- CUBLAS BLAS3 functions ---------------- */

enclave {
    include "cublas_size.h" 
    include "cuda_fp16.h"
    include "cuda_bf16.h"
    include "library_types.h"
    include "cuComplex.h"
    trusted {
        /* GEMM */
        public cublasStatus_t cublasSgemm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const float* A, int lda, [devptr] const float* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] float* C, int ldc);
        public cublasStatus_t cublasDgemm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const double* A, int lda, [devptr] const double* B, int ldb,[in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] double* C, int ldc);
        public cublasStatus_t cublasCgemm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasCgemm3m([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasCgemm3mEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const void* A, cudaDataType Atype, int lda, [devptr] const void* B, cudaDataType Btype, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] void* C, cudaDataType Ctype, int ldc);
        public cublasStatus_t cublasZgemm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [devptr] cuDoubleComplex* C, int ldc);
        public cublasStatus_t cublasZgemm3m([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [devptr] cuDoubleComplex* C, int ldc);
        
        // #if defined(__cplusplus)
        public cublasStatus_t cublasHgemm([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const __half* alpha, [devptr] const __half* A, int lda, [devptr] const __half* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const __half* beta, [devptr] __half* C, int ldc);
        // #endif

        /* IO in FP16/FP32, computation in float */
        public cublasStatus_t cublasSgemmEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const void* A, cudaDataType Atype, int lda, [devptr] const void* B, cudaDataType Btype, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] void* C, cudaDataType Ctype, int ldc);
        public cublasStatus_t cublasGemmEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceGemmTypeSize,sizefuncpars=alpha_computeType_Ctype] const void* alpha, [devptr] const void* A, cudaDataType Atype, int lda, [devptr] const void* B, cudaDataType Btype, int ldb, [in,sizefunc=cublasHostOrDeviceGemmTypeSize,sizefuncpars=beta_computeType_Ctype] const void* beta, [devptr] void* C, cudaDataType Ctype, int ldc, cublasComputeType_t computeType, cublasGemmAlgo_t algo);

        /* IO in Int8 complex/cuComplex, computation in cuComplex */
        public cublasStatus_t cublasCgemmEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const void* A, cudaDataType Atype, int lda, [devptr] const void* B, cudaDataType Btype, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] void* C, cudaDataType Ctype, int ldc);
        public cublasStatus_t cublasUint8gemmBias([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, cublasOperation_t transc, int m, int n, int k, [devptr] const unsigned char* A, int A_bias, int lda, [devptr] const unsigned char* B, int B_bias, int ldb, [devptr] unsigned char* C, int C_bias, int ldc, int C_mult, int C_shift);

        /* SYRK */
        public cublasStatus_t cublasSsyrk_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const float* A, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] float* C, int ldc);
        public cublasStatus_t cublasDsyrk_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const double* A, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] double* C, int ldc);
        public cublasStatus_t cublasCsyrk_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasZsyrk_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [devptr] cuDoubleComplex* C, int ldc);

        /* IO in Int8 complex/cuComplex, computation in cuComplex */
        public cublasStatus_t cublasCsyrkEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const void* A, cudaDataType Atype, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] void* C, cudaDataType Ctype, int ldc);

        /* IO in Int8 complex/cuComplex, computation in cuComplex, Gaussian math */
        public cublasStatus_t cublasCsyrk3mEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const void* A, cudaDataType Atype, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] void* C, cudaDataType Ctype, int ldc);

        /* HERK */
        public cublasStatus_t cublasCherk_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const cuComplex* A, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] cuComplex* C, int ldc);

        public cublasStatus_t cublasZherk_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const cuDoubleComplex* A, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] cuDoubleComplex* C, int ldc);

        /* IO in Int8 complex/cuComplex, computation in cuComplex */
        public cublasStatus_t cublasCherkEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const void* A, cudaDataType Atype, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] void* C, cudaDataType Ctype, int ldc);

        /* IO in Int8 complex/cuComplex, computation in cuComplex, Gaussian math */
        public cublasStatus_t cublasCherk3mEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const void* A, cudaDataType Atype, int lda, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] void* C, cudaDataType Ctype, int ldc);

        /* SYR2K */
        public cublasStatus_t cublasSsyr2k_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const float* A, int lda, [devptr] const float* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] float* C, int ldc);
        public cublasStatus_t cublasDsyr2k_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const double* A, int lda, [devptr] const double* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] double* C, int ldc);
        public cublasStatus_t cublasCsyr2k_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasZsyr2k_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [devptr] cuDoubleComplex* C, int ldc);

        /* HER2K */
        public cublasStatus_t cublasCher2k_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasZher2k_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] cuDoubleComplex* C, int ldc);

        /* SYRKX : eXtended SYRK*/
        public cublasStatus_t cublasSsyrkx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const float* A, int lda, [devptr] const float* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] float* C, int ldc);
        public cublasStatus_t cublasDsyrkx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const double* A, int lda, [devptr] const double* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] double* C, int ldc);
        public cublasStatus_t cublasCsyrkx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasZsyrkx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [devptr] cuDoubleComplex* C, int ldc);

        /* HERKX : eXtended HERK */
        public cublasStatus_t cublasCherkx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasZherkx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasFillMode_t uplo, cublasOperation_t trans, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] cuDoubleComplex* C, int ldc);

        /* SYMM */
        public cublasStatus_t cublasSsymm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const float* A, int lda, [devptr] const float* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] float* C, int ldc);
        public cublasStatus_t cublasDsymm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const double* A, int lda, [devptr] const double* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] double* C, int ldc);
        public cublasStatus_t cublasCsymm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasZsymm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [devptr] cuDoubleComplex* C, int ldc);

        /* HEMM */
        public cublasStatus_t cublasChemm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasZhemm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [devptr] cuDoubleComplex* C, int ldc);

        /* TRSM */
        public cublasStatus_t cublasStrsm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const float* A, int lda, [devptr] float* B, int ldb);
        public cublasStatus_t cublasDtrsm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const double* A, int lda, [devptr] double* B, int ldb);
        public cublasStatus_t cublasCtrsm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] cuComplex* B, int ldb);
        public cublasStatus_t cublasZtrsm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] cuDoubleComplex* B, int ldb);

        /* TRMM */
        public cublasStatus_t cublasStrmm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const float* A, int lda, [devptr] const float* B, int ldb, [devptr] float* C, int ldc);
        public cublasStatus_t cublasDtrmm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const double* A, int lda, [devptr] const double* B, int ldb, [devptr] double* C, int ldc);
        public cublasStatus_t cublasCtrmm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, [devptr] const cuComplex* B, int ldb, [devptr] cuComplex* C, int ldc);
        public cublasStatus_t cublasZtrmm_v2([val,transform_in=handleToCublas]cublasHandle_t handle, cublasSideMode_t side, cublasFillMode_t uplo, cublasOperation_t trans, cublasDiagType_t diag, int m, int n, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, [devptr] const cuDoubleComplex* B, int ldb, [devptr] cuDoubleComplex* C, int ldc);

        /* BATCH GEMM */
        // // #if defined(__cplusplus)
        // public cublasStatus_t cublasHgemmBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const __half* alpha, [in,count=batchCount]const __half* Aarray[], int lda, [in,count=batchCount] const __half* Barray[], int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const __half* beta, [in,count=batchCount] __half* const Carray[], int ldc, int batchCount);
        // // #endif
        // public cublasStatus_t cublasSgemmBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [in,count=batchCount] const float* Aarray[], int lda, [in, count=batchCount] const float* Barray[], int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [in, count=batchCount] float* const Carray[], int ldc, int batchCount);
        // public cublasStatus_t cublasDgemmBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [in,count=batchCount] const double* Aarray[], int lda, [in, count=batchCount] const double* Barray[], int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [in, count=batchCount] double* const Carray[], int ldc, int batchCount);
        // public cublasStatus_t cublasCgemmBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [in,count=batchCount] const cuComplex* Aarray[], int lda, [in, count=batchCount] const cuComplex* Barray[], int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [in, count=batchCount] cuComplex* const Carray[], int ldc, int batchCount);
        // public cublasStatus_t cublasCgemm3mBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [in,count=batchCount] const cuComplex* Aarray[], int lda, [in, count=batchCount] const cuComplex* Barray[], int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [in, count=batchCount] cuComplex* const Carray[], int ldc, int batchCount);
        // public cublasStatus_t cublasZgemmBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [in,count=batchCount] const cuDoubleComplex* Aarray[], int lda, [in, count=batchCount] const cuDoubleComplex* Barray[], int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [in, count=batchCount] cuDoubleComplex* const Carray[], int ldc, int batchCount);
        
        // public cublasStatus_t cublasGemmBatchedEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const void* alpha, [in,count=batchCount] const void* Aarray[], cudaDataType Atype, int lda, [in, count=batchCount] const void* Barray[], cudaDataType Btype, int ldb, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const void* beta, [in, count=batchCount] void* const Carray[], cudaDataType Ctype, int ldc, int batchCount, cublasComputeType_t computeType, cublasGemmAlgo_t algo);
        public cublasStatus_t cublasGemmStridedBatchedEx([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceGemmTypeSize,sizefuncpars=alpha_computeType_Ctype] const void* alpha, [devptr] const void* A, cudaDataType Atype, int lda, long long strideA, [devptr] const void* B, cudaDataType Btype, int ldb, long long strideB, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const void* beta, [devptr] void* C, cudaDataType Ctype, int ldc, long long strideC, int batchCount, cublasComputeType_t computeType, cublasGemmAlgo_t algo);
        
        public cublasStatus_t cublasSgemmStridedBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const float* alpha, [devptr] const float* A, int lda, long long strideA, [devptr] const float* B, int ldb, long long strideB, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const float* beta, [devptr] float* C, int ldc, long long strideC, int batchCount);
        public cublasStatus_t cublasDgemmStridedBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const double* alpha, [devptr] const double* A, int lda, long long strideA, [devptr] const double* B, int ldb, long long strideB, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const double* beta, [devptr] double* C, int ldc, long long strideC, int batchCount);
        public cublasStatus_t cublasCgemmStridedBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, long long strideA, [devptr] const cuComplex* B, int ldb, long long strideB, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc, long long strideC, int batchCount);
        public cublasStatus_t cublasCgemm3mStridedBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuComplex* alpha, [devptr] const cuComplex* A, int lda, long long strideA, [devptr] const cuComplex* B, int ldb, long long strideB, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuComplex* beta, [devptr] cuComplex* C, int ldc, long long strideC, int batchCount);
        public cublasStatus_t cublasZgemmStridedBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const cuDoubleComplex* alpha, [devptr] const cuDoubleComplex* A, int lda, long long strideA, /* purposely signed */ [devptr] const cuDoubleComplex* B, int ldb, long long strideB, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const cuDoubleComplex* beta, [devptr] cuDoubleComplex* C, int ldc, long long strideC, int batchCount);

        // #if defined(__cplusplus)
        public cublasStatus_t cublasHgemmStridedBatched([val,transform_in=handleToCublas]cublasHandle_t handle, cublasOperation_t transa, cublasOperation_t transb, int m, int n, int k, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=alpha] const __half* alpha, [devptr] const __half* A, int lda, long long strideA, [devptr] const __half* B, int ldb, long long strideB, [in,sizefunc=cublasHostOrDeviceSize,sizefuncpars=beta] const __half* beta, [devptr] __half* C, int ldc, long long strideC, int batchCount);
        // #endif
    };
};